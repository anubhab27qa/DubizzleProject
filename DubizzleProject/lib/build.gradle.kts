/*
* This file was generated by the Gradle 'init' task.
*
* This generated file contains a sample Java library project to get you started.
* For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.13/userguide/building_java_projects.html in the Gradle documentation.
*/
 
plugins {
    // Apply the java-library plugin for API and implementation separation.
    `java-library`
}
 
repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}
 
dependencies {
 
 
// https://mvnrepository.com/artifact/io.cucumber/cucumber-java
implementation("io.cucumber:cucumber-java:7.21.1")

// https://mvnrepository.com/artifact/org.junit.platform/junit-platform-runner
testImplementation("org.junit.platform:junit-platform-runner:1.13.0-M2")
 
// https://mvnrepository.com/artifact/io.cucumber/cucumber-junit
implementation("io.cucumber:cucumber-junit:7.21.1")
 
// https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java
implementation("org.seleniumhq.selenium:selenium-java:4.30.0")

// https://mvnrepository.com/artifact/io.github.bonigarcia/webdrivermanager
//implementation("io.github.bonigarcia:webdrivermanager:6.0.0")
 
// https://mvnrepository.com/artifact/org.testng/testng
testImplementation("org.testng:testng:7.11.0")
 
 
// https://mvnrepository.com/artifact/junit/junit
testImplementation("junit:junit:4.13.2")
 
    //testRuntimeOnly("org.junit.platform:junit-platform-launcher")
 
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api(libs.commons.math3)
 
    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation(libs.guava)
    
    // https://mvnrepository.com/artifact/tech.grasshopper/cucumber-extent-generator
implementation("tech.grasshopper:cucumber-extent-generator:1.0.2")

// https://mvnrepository.com/artifact/ru.sbtqa.tag/video-recorder
implementation("ru.sbtqa.tag:video-recorder:1.1.2")
}
 
// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}
 
tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

